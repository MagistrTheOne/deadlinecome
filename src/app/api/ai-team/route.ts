import { NextRequest, NextResponse } from "next/server";

interface AITeamMember {
  id: string;
  name: string;
  role: string;
  specialization: string;
  avatar: string;
  status: "online" | "busy" | "away" | "offline";
  currentTask?: string;
  performance: {
    tasksCompleted: number;
    successRate: number;
    responseTime: number;
    satisfaction: number;
  };
  skills: string[];
  personality: {
    traits: string[];
    communicationStyle: string;
    workingHours: string;
  };
  recentActivity: Array<{
    id: string;
    action: string;
    timestamp: Date;
    project?: string;
  }>;
}

// –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è AI –∫–æ–º–∞–Ω–¥—ã
const demoAITeam: AITeamMember[] = [
  {
    id: "ai-vasily",
    name: "–í–∞—Å–∏–ª–∏–π",
    role: "AI Team Lead",
    specialization: "Project Management & Strategy",
    avatar: "ü§ñ",
    status: "online",
    currentTask: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–∏–Ω—Ç–∞",
    performance: {
      tasksCompleted: 156,
      successRate: 94,
      responseTime: 2.3,
      satisfaction: 4.8
    },
    skills: ["Agile", "Scrum", "Team Management", "AI Strategy"],
    personality: {
      traits: ["–õ–∏–¥–µ—Ä", "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π", "–ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π"],
      communicationStyle: "–ü—Ä—è–º–æ–π –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π",
      workingHours: "24/7"
    },
    recentActivity: [
      {
        id: "act-1",
        action: "–°–æ–∑–¥–∞–ª –ø–ª–∞–Ω —Å–ø—Ä–∏–Ω—Ç–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é",
        timestamp: new Date(Date.now() - 30 * 60 * 1000),
        project: "DeadLine"
      },
      {
        id: "act-2",
        action: "–ü—Ä–æ–≤–µ–ª —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤—É —Å –∫–æ–º–∞–Ω–¥–æ–π",
        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),
        project: "DeadLine"
      }
    ]
  },
  {
    id: "ai-vladimir",
    name: "–í–ª–∞–¥–∏–º–∏—Ä",
    role: "AI Code Reviewer",
    specialization: "Code Quality & Architecture",
    avatar: "üë®‚Äçüíª",
    status: "busy",
    currentTask: "–ê–Ω–∞–ª–∏–∑ PR-125",
    performance: {
      tasksCompleted: 89,
      successRate: 97,
      responseTime: 1.8,
      satisfaction: 4.9
    },
    skills: ["Code Review", "Architecture", "Security", "Performance"],
    personality: {
      traits: ["–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π", "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"],
      communicationStyle: "–î–µ—Ç–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–π",
      workingHours: "9:00-18:00"
    },
    recentActivity: [
      {
        id: "act-3",
        action: "–ó–∞–≤–µ—Ä—à–∏–ª review PR-124",
        timestamp: new Date(Date.now() - 45 * 60 * 1000),
        project: "DeadLine"
      },
      {
        id: "act-4",
        action: "–û–±–Ω–∞—Ä—É–∂–∏–ª security —É—è–∑–≤–∏–º–æ—Å—Ç—å",
        timestamp: new Date(Date.now() - 3 * 60 * 60 * 1000),
        project: "DeadLine"
      }
    ]
  },
  {
    id: "ai-olga",
    name: "–û–ª—å–≥–∞",
    role: "AI Security Expert",
    specialization: "Security & Compliance",
    avatar: "üõ°Ô∏è",
    status: "online",
    currentTask: "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    performance: {
      tasksCompleted: 67,
      successRate: 99,
      responseTime: 3.2,
      satisfaction: 4.7
    },
    skills: ["Security", "Compliance", "Risk Assessment", "Penetration Testing"],
    personality: {
      traits: ["–ë–¥–∏—Ç–µ–ª—å–Ω–∞—è", "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è", "–ó–∞—â–∏—â–∞—é—â–∞—è"],
      communicationStyle: "–û—Å—Ç–æ—Ä–æ–∂–Ω–∞—è –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–∞—è",
      workingHours: "24/7"
    },
    recentActivity: [
      {
        id: "act-5",
        action: "–ó–∞–≤–µ—Ä—à–∏–ª–∞ security audit",
        timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000),
        project: "DeadLine"
      },
      {
        id: "act-6",
        action: "–û–±–Ω–æ–≤–∏–ª–∞ security policies",
        timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000),
        project: "DeadLine"
      }
    ]
  },
  {
    id: "ai-pavel",
    name: "–ü–∞–≤–µ–ª",
    role: "AI Performance Engineer",
    specialization: "Performance & Optimization",
    avatar: "‚ö°",
    status: "away",
    currentTask: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤",
    performance: {
      tasksCompleted: 78,
      successRate: 92,
      responseTime: 2.1,
      satisfaction: 4.6
    },
    skills: ["Performance", "Optimization", "Monitoring", "Scalability"],
    personality: {
      traits: ["–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π", "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π", "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É—é—â–∏–π"],
      communicationStyle: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–π",
      workingHours: "10:00-19:00"
    },
    recentActivity: [
      {
        id: "act-7",
        action: "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª database queries",
        timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),
        project: "DeadLine"
      }
    ]
  },
  {
    id: "ai-mikhail",
    name: "–ú–∏—Ö–∞–∏–ª",
    role: "AI Project Manager",
    specialization: "Planning & Coordination",
    avatar: "üìä",
    status: "online",
    currentTask: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞",
    performance: {
      tasksCompleted: 134,
      successRate: 96,
      responseTime: 1.9,
      satisfaction: 4.8
    },
    skills: ["Project Management", "Planning", "Coordination", "Risk Management"],
    personality: {
      traits: ["–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π", "–ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π", "–ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É—é—â–∏–π"],
      communicationStyle: "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –ø–ª–∞–Ω–∏—Ä—É—é—â–∏–π",
      workingHours: "8:00-17:00"
    },
    recentActivity: [
      {
        id: "act-8",
        action: "–°–æ–∑–¥–∞–ª roadmap –Ω–∞ –∫–≤–∞—Ä—Ç–∞–ª",
        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),
        project: "DeadLine"
      }
    ]
  },
  {
    id: "ai-tatyana",
    name: "–¢–∞—Ç—å—è–Ω–∞",
    role: "AI Documentation Specialist",
    specialization: "Documentation & Knowledge",
    avatar: "üìö",
    status: "busy",
    currentTask: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ API docs",
    performance: {
      tasksCompleted: 92,
      successRate: 98,
      responseTime: 2.5,
      satisfaction: 4.9
    },
    skills: ["Documentation", "Technical Writing", "Knowledge Management", "API Docs"],
    personality: {
      traits: ["–î–µ—Ç–∞–ª—å–Ω–∞—è", "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–∞—è", "–ü–æ–º–æ–≥–∞—é—â–∞—è"],
      communicationStyle: "–Ø—Å–Ω–∞—è –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è",
      workingHours: "9:00-18:00"
    },
    recentActivity: [
      {
        id: "act-9",
        action: "–û–±–Ω–æ–≤–∏–ª–∞ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é",
        timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000),
        project: "DeadLine"
      }
    ]
  }
];

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const status = searchParams.get("status");
    const specialization = searchParams.get("specialization");

    let filteredTeam = [...demoAITeam];

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É
    if (status && status !== "ALL") {
      filteredTeam = filteredTeam.filter(member => member.status === status);
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    if (specialization && specialization !== "ALL") {
      filteredTeam = filteredTeam.filter(member => 
        member.specialization.toLowerCase().includes(specialization.toLowerCase())
      );
    }

    return NextResponse.json({ team: filteredTeam });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è AI –∫–æ–º–∞–Ω–¥—ã:", error);
    return NextResponse.json(
      { error: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è AI –∫–æ–º–∞–Ω–¥—ã" },
      { status: 500 }
    );
  }
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { message, targetMember } = body;

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è AI-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
    const response = {
      success: true,
      message: `–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${targetMember || "–∫–æ–º–∞–Ω–¥–µ"}`,
      timestamp: new Date().toISOString()
    };

    return NextResponse.json(response);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    return NextResponse.json(
      { error: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è" },
      { status: 500 }
    );
  }
}
"use client";

export interface SupportMessage {
  id: string;
  type: "motivation" | "encouragement" | "advice" | "celebration" | "warning" | "support";
  content: string;
  tone: "friendly" | "professional" | "caring" | "energetic" | "calm";
  priority: "low" | "medium" | "high" | "urgent";
  targetUser?: string;
  context: string;
  timestamp: Date;
  delivered: boolean;
}

export interface UserProfile {
  userId: string;
  userName: string;
  personality: "introvert" | "extrovert" | "ambivert";
  workStyle: "morning" | "evening" | "flexible";
  stressLevel: number; // 0-1
  motivationLevel: number; // 0-1
  preferredSupport: "direct" | "subtle" | "group" | "individual";
  lastSupport: Date;
  supportHistory: SupportMessage[];
}

export interface CrisisSituation {
  id: string;
  type: "burnout" | "conflict" | "deadline_pressure" | "technical_blocker" | "team_dysfunction";
  severity: "low" | "medium" | "high" | "critical";
  affectedUsers: string[];
  description: string;
  detectedAt: Date;
  resolved: boolean;
  resolutionActions: string[];
}

export class PsychologicalSupport {
  private static userProfiles: Map<string, UserProfile> = new Map();
  private static supportMessages: SupportMessage[] = [];
  private static crisisSituations: CrisisSituation[] = [];
  private static lastSupportCheck: Date = new Date();

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  static initializeUserProfile(userId: string, userName: string): UserProfile {
    const profile: UserProfile = {
      userId,
      userName,
      personality: "ambivert",
      workStyle: "flexible",
      stressLevel: 0.3,
      motivationLevel: 0.7,
      preferredSupport: "subtle",
      lastSupport: new Date(),
      supportHistory: []
    };

    this.userProfiles.set(userId, profile);
    return profile;
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
   */
  static updateUserProfile(userId: string, updates: Partial<UserProfile>): void {
    const profile = this.userProfiles.get(userId);
    if (profile) {
      Object.assign(profile, updates);
      this.userProfiles.set(userId, profile);
    }
  }

  /**
   * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏—Ç—É–∞—Ü–∏—é –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É
   */
  static analyzeAndSupport(
    userId: string, 
    context: {
      mood: string;
      stressLevel: number;
      workload: number;
      recentActivity: string[];
      teamInteraction: number;
    }
  ): SupportMessage[] {
    const profile = this.userProfiles.get(userId) || this.initializeUserProfile(userId, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
    const supportMessages: SupportMessage[] = [];

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞
    if (context.stressLevel > 0.8) {
      supportMessages.push(this.generateStressSupport(profile, context));
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏—é
    if (context.mood === "frustrated" || context.mood === "tired") {
      supportMessages.push(this.generateMotivationSupport(profile, context));
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    if (context.recentActivity.some(activity => 
      activity.includes("completed") || activity.includes("success") || activity.includes("done")
    )) {
      supportMessages.push(this.generateCelebrationSupport(profile, context));
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
    if (context.teamInteraction < 0.3) {
      supportMessages.push(this.generateTeamSupport(profile, context));
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫—Ä–∏–∑–∏—Å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
    const crisis = this.detectCrisisSituation(userId, context);
    if (crisis) {
      supportMessages.push(this.generateCrisisSupport(profile, crisis));
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    this.supportMessages.push(...supportMessages);
    profile.supportHistory.push(...supportMessages);
    profile.lastSupport = new Date();

    return supportMessages;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–∏ —Å—Ç—Ä–µ—Å—Å–µ
   */
  private static generateStressSupport(profile: UserProfile, context: any): SupportMessage {
    const stressMessages = [
      {
        content: "–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ —Å–µ–π—á–∞—Å –Ω–µ–ø—Ä–æ—Å—Ç–æ. –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º –∏ —Å–¥–µ–ª–∞–µ–º –ø–µ—Ä–µ—Ä—ã–≤.",
        tone: "caring" as const,
        type: "support" as const
      },
      {
        content: "–°—Ç—Ä–µ—Å—Å - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –≤ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ. –ü–æ–º–Ω–∏—Ç–µ: –≤—ã —Å–ø—Ä–∞–≤–ª—è–ª–∏—Å—å —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ —Ä–∞–Ω—å—à–µ, —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å –∏ —Å–µ–π—á–∞—Å! üí™",
        tone: "energetic" as const,
        type: "encouragement" as const
      },
      {
        content: "–ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ—Ö–Ω–∏–∫—É '–ø–æ–º–∏–¥–æ—Ä–∞': 25 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã, 5 –º–∏–Ω—É—Ç –æ—Ç–¥—ã—Ö–∞. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ–∫—É—Å.",
        tone: "professional" as const,
        type: "advice" as const
      }
    ];

    const message = stressMessages[Math.floor(Math.random() * stressMessages.length)];
    
    return {
      id: crypto.randomUUID(),
      ...message,
      priority: "high",
      targetUser: profile.userId,
      context: "–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞",
      timestamp: new Date(),
      delivered: false
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É
   */
  private static generateMotivationSupport(profile: UserProfile, context: any): SupportMessage {
    const motivationMessages = [
      {
        content: "–ö–∞–∂–¥—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–∏—à–µ—Ç–µ, –¥–µ–ª–∞–µ—Ç –º–∏—Ä –ª—É—á—à–µ. –í—ã —Å–æ–∑–¥–∞–µ—Ç–µ —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ! üöÄ",
        tone: "energetic" as const,
        type: "motivation" as const
      },
      {
        content: "–ü–æ–º–Ω–∏—Ç–µ: –¥–∞–∂–µ —Å–∞–º—ã–µ –æ–ø—ã—Ç–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏. –≠—Ç–æ —á–∞—Å—Ç—å —Ä–æ—Å—Ç–∞!",
        tone: "friendly" as const,
        type: "encouragement" as const
      },
      {
        content: "–î–∞–≤–∞–π—Ç–µ –ø–æ—Å—Ç–∞–≤–∏–º –º–∞–ª–µ–Ω—å–∫—É—é —Ü–µ–ª—å –∏ –¥–æ—Å—Ç–∏–≥–Ω–µ–º –µ—ë. –ú–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–±–µ–¥—ã –≤–µ–¥—É—Ç –∫ –±–æ–ª—å—à–∏–º —É—Å–ø–µ—Ö–∞–º!",
        tone: "caring" as const,
        type: "motivation" as const
      }
    ];

    const message = motivationMessages[Math.floor(Math.random() * motivationMessages.length)];
    
    return {
      id: crypto.randomUUID(),
      ...message,
      priority: "medium",
      targetUser: profile.userId,
      context: "–ù–∏–∑–∫–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è",
      timestamp: new Date(),
      delivered: false
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
   */
  private static generateCelebrationSupport(profile: UserProfile, context: any): SupportMessage {
    const celebrationMessages = [
      {
        content: "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ –í–∞—à–∏ —É—Å–∏–ª–∏—è –Ω–µ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω—ã–º–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!",
        tone: "energetic" as const,
        type: "celebration" as const
      },
      {
        content: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —É—Å–ø–µ—à–Ω—ã–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º! –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –∏ —É–ø–æ—Ä—Å—Ç–≤–æ.",
        tone: "professional" as const,
        type: "celebration" as const
      },
      {
        content: "–í—ã –º–æ–ª–æ–¥–µ—Ü! –ö–∞–∂–¥–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ - —ç—Ç–æ —à–∞–≥ –∫ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É. –ì–æ—Ä–¥–∏—Ç–µ—Å—å —Å–æ–±–æ–π! üåü",
        tone: "friendly" as const,
        type: "celebration" as const
      }
    ];

    const message = celebrationMessages[Math.floor(Math.random() * celebrationMessages.length)];
    
    return {
      id: crypto.randomUUID(),
      ...message,
      priority: "medium",
      targetUser: profile.userId,
      context: "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ",
      timestamp: new Date(),
      delivered: false
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã
   */
  private static generateTeamSupport(profile: UserProfile, context: any): SupportMessage {
    const teamMessages = [
      {
        content: "–ö–æ–º–∞–Ω–¥–∞ - —ç—Ç–æ —Å–∏–ª–∞! –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é. –ú—ã –≤—Å–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞.",
        tone: "friendly" as const,
        type: "support" as const
      },
      {
        content: "–ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑—É–º –≤—Å–µ–≥–¥–∞ —Å–∏–ª—å–Ω–µ–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ. –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –∑–∞–¥–∞—á—É –≤–º–µ—Å—Ç–µ!",
        tone: "professional" as const,
        type: "advice" as const
      },
      {
        content: "–ü–æ–º–Ω–∏—Ç–µ: –Ω–µ—Ç –≥–ª—É–ø—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –õ—É—á—à–µ —Å–ø—Ä–æ—Å–∏—Ç—å —Å–µ–π—á–∞—Å, —á–µ–º –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å —á–∞—Å—ã –Ω–∞ –ø–æ–∏—Å–∫ —Ä–µ—à–µ–Ω–∏—è.",
        tone: "caring" as const,
        type: "encouragement" as const
      }
    ];

    const message = teamMessages[Math.floor(Math.random() * teamMessages.length)];
    
    return {
      id: crypto.randomUUID(),
      ...message,
      priority: "low",
      targetUser: profile.userId,
      context: "–ù–∏–∑–∫–æ–µ –∫–æ–º–∞–Ω–¥–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ",
      timestamp: new Date(),
      delivered: false
    };
  }

  /**
   * –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –∫—Ä–∏–∑–∏—Å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
   */
  private static detectCrisisSituation(userId: string, context: any): CrisisSituation | null {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ
    if (context.stressLevel > 0.9 && context.workload > 0.8) {
      return {
        id: crypto.randomUUID(),
        type: "burnout",
        severity: "critical",
        affectedUsers: [userId],
        description: "–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –≤—ã–≥–æ—Ä–∞–Ω–∏—è",
        detectedAt: new Date(),
        resolved: false,
        resolutionActions: []
      };
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –±–ª–æ–∫–µ—Ä—ã
    if (context.recentActivity.some((activity: any) =>
      activity.includes("stuck") || activity.includes("blocked") || activity.includes("error")
    )) {
      return {
        id: crypto.randomUUID(),
        type: "technical_blocker",
        severity: "high",
        affectedUsers: [userId],
        description: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏",
        detectedAt: new Date(),
        resolved: false,
        resolutionActions: []
      };
    }

    return null;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤ –∫—Ä–∏–∑–∏—Å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏
   */
  private static generateCrisisSupport(profile: UserProfile, crisis: CrisisSituation): SupportMessage {
    const crisisMessages: Record<string, any> = {
      burnout: {
        content: "üö® –í–ù–ò–ú–ê–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤—ã–≥–æ—Ä–∞–Ω–∏—è. –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤ –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é!",
        tone: "urgent" as const,
        type: "warning" as const,
        priority: "urgent" as const
      },
      technical_blocker: {
        content: "–í–∏–∂—É, —á—Ç–æ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏. –î–∞–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ!",
        tone: "supportive" as const,
        type: "support" as const,
        priority: "high" as const
      }
    };

    const message = crisisMessages[crisis.type] || crisisMessages.technical_blocker;
    
    return {
      id: crypto.randomUUID(),
      ...message,
      targetUser: profile.userId,
      context: `–ö—Ä–∏–∑–∏—Å–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è: ${crisis.type}`,
      timestamp: new Date(),
      delivered: false
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
   */
  static generateDailyMotivation(): SupportMessage[] {
    const dailyMessages = [
      {
        content: "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üåÖ –°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–≥–æ-—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ!",
        tone: "energetic" as const,
        type: "motivation" as const
      },
      {
        content: "–ü–æ–º–Ω–∏—Ç–µ: –∫–∞–∂–¥—ã–π –±–∞–≥ - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. –ö–∞–∂–¥–∞—è –æ—à–∏–±–∫–∞ - —ç—Ç–æ —É—Ä–æ–∫!",
        tone: "friendly" as const,
        type: "encouragement" as const
      },
      {
        content: "–°–µ–≥–æ–¥–Ω—è –º—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–∏—à–µ–º –∫–æ–¥, –º—ã —Å—Ç—Ä–æ–∏–º –±—É–¥—É—â–µ–µ! üíª‚ú®",
        tone: "energetic" as const,
        type: "motivation" as const
      },
      {
        content: "–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –≤–∞–∂–Ω–∞. –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–æ–¥–∞ –¥–µ–ª–∞–µ—Ç —á—å—é-—Ç–æ –∂–∏–∑–Ω—å –ª—É—á—à–µ!",
        tone: "caring" as const,
        type: "motivation" as const
      }
    ];

    const message = dailyMessages[Math.floor(Math.random() * dailyMessages.length)];
    
    return [{
      id: crypto.randomUUID(),
      ...message,
      priority: "low",
      context: "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è",
      timestamp: new Date(),
      delivered: false
    }];
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∫–æ–º–∞–Ω–¥–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã
   */
  static getTeamAtmosphereRecommendations(): string[] {
    const recommendations = [
      "–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤—ã –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º",
      "–í–≤–µ–¥–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –≤–∑–∞–∏–º–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã",
      "–°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è",
      "–ü—Ä–æ–≤–æ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–≤—è–∑–µ–π",
      "–í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞ –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
      "–°–æ–∑–¥–∞–π—Ç–µ –∫—É–ª—å—Ç—É—Ä—É –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –æ–±—â–µ–Ω–∏—è –∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏",
      "–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –æ–±—É—á–∞—é—â–∏–µ —Å–µ—Å—Å–∏–∏",
      "–í–≤–µ–¥–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã"
    ];

    return recommendations;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
   */
  static getSupportStats(): {
    totalMessages: number;
    messagesByType: Record<string, number>;
    messagesByPriority: Record<string, number>;
    activeCrises: number;
    resolvedCrises: number;
    averageResponseTime: number;
  } {
    const messagesByType: Record<string, number> = {};
    const messagesByPriority: Record<string, number> = {};
    
    this.supportMessages.forEach(message => {
      messagesByType[message.type] = (messagesByType[message.type] || 0) + 1;
      messagesByPriority[message.priority] = (messagesByPriority[message.priority] || 0) + 1;
    });

    const activeCrises = this.crisisSituations.filter(crisis => !crisis.resolved).length;
    const resolvedCrises = this.crisisSituations.filter(crisis => crisis.resolved).length;

    return {
      totalMessages: this.supportMessages.length,
      messagesByType,
      messagesByPriority,
      activeCrises,
      resolvedCrises,
      averageResponseTime: 0 // TODO: Implement response time tracking
    };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   */
  static getAllUserProfiles(): UserProfile[] {
    return Array.from(this.userProfiles.values());
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∫—Ä–∏–∑–∏—Å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
   */
  static getActiveCrises(): CrisisSituation[] {
    return this.crisisSituations.filter(crisis => !crisis.resolved);
  }

  /**
   * –†–∞–∑—Ä–µ—à–∞–µ—Ç –∫—Ä–∏–∑–∏—Å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é
   */
  static resolveCrisis(crisisId: string, resolutionActions: string[]): boolean {
    const crisis = this.crisisSituations.find(c => c.id === crisisId);
    if (crisis) {
      crisis.resolved = true;
      crisis.resolutionActions = resolutionActions;
      return true;
    }
    return false;
  }
}

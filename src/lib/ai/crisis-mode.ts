"use client";

export interface CrisisAlert {
  id: string;
  type: "burnout" | "deadline" | "technical" | "team" | "quality" | "security";
  severity: "low" | "medium" | "high" | "critical";
  title: string;
  description: string;
  affectedUsers: string[];
  detectedAt: Date;
  resolved: boolean;
  resolutionActions: string[];
  escalated: boolean;
}

export interface CrisisResponse {
  id: string;
  alertId: string;
  type: "immediate" | "short_term" | "long_term";
  actions: CrisisAction[];
  priority: "urgent" | "high" | "medium" | "low";
  estimatedTime: number; // –≤ —á–∞—Å–∞—Ö
  assignedTo: string[];
  status: "pending" | "in_progress" | "completed" | "failed";
  createdAt: Date;
  completedAt?: Date;
}

export interface CrisisAction {
  id: string;
  title: string;
  description: string;
  type: "support" | "resource" | "process" | "communication" | "technical";
  urgency: "immediate" | "urgent" | "important" | "normal";
  estimatedTime: number; // –≤ –º–∏–Ω—É—Ç–∞—Ö
  completed: boolean;
  assignedTo?: string;
  completedAt?: Date;
}

export interface CrisisSupportMessage {
  id: string;
  userId: string;
  type: "motivation" | "guidance" | "resource" | "escalation" | "relief";
  content: string;
  tone: "urgent" | "supportive" | "encouraging" | "calm" | "energetic";
  priority: "critical" | "high" | "medium" | "low";
  sentAt: Date;
  delivered: boolean;
}

export interface CrisisMetrics {
  activeCrises: number;
  resolvedCrises: number;
  averageResolutionTime: number; // –≤ —á–∞—Å–∞—Ö
  teamStressLevel: number; // 0-1
  productivityImpact: number; // 0-1
  supportMessagesSent: number;
  escalationRate: number; // 0-1
}

export class CrisisMode {
  private static activeAlerts: CrisisAlert[] = [];
  private static crisisResponses: CrisisResponse[] = [];
  private static supportMessages: CrisisSupportMessage[] = [];
  private static crisisModeActive: boolean = false;
  private static lastCrisisCheck: Date = new Date();

  /**
   * –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –∫—Ä–∏–∑–∏—Å–∞
   */
  static activateCrisisMode(): void {
    this.crisisModeActive = true;
    console.log("üö® –†–ï–ñ–ò–ú –ö–†–ò–ó–ò–°–ê –ê–ö–¢–ò–í–ò–†–û–í–ê–ù");
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
    this.sendCrisisNotifications();
  }

  /**
   * –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –∫—Ä–∏–∑–∏—Å–∞
   */
  static deactivateCrisisMode(): void {
    this.crisisModeActive = false;
    console.log("‚úÖ –†–µ–∂–∏–º –∫—Ä–∏–∑–∏—Å–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—Ä–∏–∑–∏—Å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
   */
  static detectCrisisSituations(data: {
    teamStress: number;
    productivity: number;
    deadlinePressure: number;
    bugCount: number;
    teamMood: string;
    workload: number;
    userActivity: any[];
  }): CrisisAlert[] {
    const newAlerts: CrisisAlert[] = [];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≥–æ—Ä–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    if (data.teamStress > 0.9 || data.teamMood === "stressed") {
      newAlerts.push({
        id: crypto.randomUUID(),
        type: "burnout",
        severity: "critical",
        title: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ –∫–æ–º–∞–Ω–¥—ã",
        description: "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–∏–∑–Ω–∞–∫–∏ –º–∞—Å—Å–æ–≤–æ–≥–æ –≤—ã–≥–æ—Ä–∞–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥–µ",
        affectedUsers: data.userActivity.map(u => u.userId),
        detectedAt: new Date(),
        resolved: false,
        resolutionActions: [],
        escalated: false
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–≤–ª–µ–Ω–∏–µ –¥–µ–¥–ª–∞–π–Ω–æ–≤
    if (data.deadlinePressure > 0.8) {
      newAlerts.push({
        id: crypto.randomUUID(),
        type: "deadline",
        severity: "high",
        title: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –¥–µ–¥–ª–∞–π–Ω–æ–≤",
        description: "–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ —Å—Ä—ã–≤–∞ —Å—Ä–æ–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞",
        affectedUsers: data.userActivity.map(u => u.userId),
        detectedAt: new Date(),
        resolved: false,
        resolutionActions: [],
        escalated: false
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    if (data.bugCount > 10) {
      newAlerts.push({
        id: crypto.randomUUID(),
        type: "technical",
        severity: "high",
        title: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–≥–æ–≤",
        description: "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∞–Ω–æ–º–∞–ª—å–Ω–æ –≤—ã—Å–æ–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–≥–æ–≤",
        affectedUsers: data.userActivity.map(u => u.userId),
        detectedAt: new Date(),
        resolved: false,
        resolutionActions: [],
        escalated: false
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–¥–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if (data.productivity < 0.3) {
      newAlerts.push({
        id: crypto.randomUUID(),
        type: "quality",
        severity: "medium",
        title: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –ø–∞–¥–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
        description: "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã —É–ø–∞–ª–∞ –Ω–∏–∂–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è",
        affectedUsers: data.userActivity.map(u => u.userId),
        detectedAt: new Date(),
        resolved: false,
        resolutionActions: [],
        escalated: false
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≥—Ä—É–∑–∫—É
    if (data.workload > 0.95) {
      newAlerts.push({
        id: crypto.randomUUID(),
        type: "team",
        severity: "high",
        title: "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –∫–æ–º–∞–Ω–¥—ã",
        description: "–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø—Ä–µ–¥–µ–ª–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π",
        affectedUsers: data.userActivity.map(u => u.userId),
        detectedAt: new Date(),
        resolved: false,
        resolutionActions: [],
        escalated: false
      });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∞–ª–µ—Ä—Ç—ã
    this.activeAlerts.push(...newAlerts);

    // –ï—Å–ª–∏ –µ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ–∂–∏–º –∫—Ä–∏–∑–∏—Å–∞
    if (newAlerts.some(alert => alert.severity === "critical")) {
      this.activateCrisisMode();
    }

    return newAlerts;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –ø–ª–∞–Ω —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∫—Ä–∏–∑–∏—Å
   */
  static createCrisisResponse(alertId: string): CrisisResponse {
    const alert = this.activeAlerts.find(a => a.id === alertId);
    if (!alert) throw new Error("Alert not found");

    const actions: CrisisAction[] = [];

    switch (alert.type) {
      case "burnout":
        actions.push(
          {
            id: crypto.randomUUID(),
            title: "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–º–∞–Ω–¥—ã",
            description: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º",
            type: "support",
            urgency: "immediate",
            estimatedTime: 15,
            completed: false
          },
          {
            id: crypto.randomUUID(),
            title: "–°–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏",
            description: "–ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏ —Å–Ω–∏–∑–∏—Ç—å –¥–∞–≤–ª–µ–Ω–∏–µ",
            type: "process",
            urgency: "urgent",
            estimatedTime: 60,
            completed: false
          },
          {
            id: crypto.randomUUID(),
            title: "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ—Ç–¥—ã—Ö–∞",
            description: "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã",
            type: "process",
            urgency: "important",
            estimatedTime: 30,
            completed: false
          }
        );
        break;

      case "deadline":
        actions.push(
          {
            id: crypto.randomUUID(),
            title: "–ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á",
            description: "–ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ —É–±—Ä–∞—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏",
            type: "process",
            urgency: "immediate",
            estimatedTime: 45,
            completed: false
          },
          {
            id: crypto.randomUUID(),
            title: "–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤",
            description: "–ù–∞–π—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–≤",
            type: "resource",
            urgency: "urgent",
            estimatedTime: 120,
            completed: false
          },
          {
            id: crypto.randomUUID(),
            title: "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º",
            description: "–û–±—Å—É–¥–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ —Å—Ä–æ–∫–æ–≤",
            type: "communication",
            urgency: "urgent",
            estimatedTime: 30,
            completed: false
          }
        );
        break;

      case "technical":
        actions.push(
          {
            id: crypto.randomUUID(),
            title: "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–≥–æ–≤",
            description: "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –±–∞–≥–æ–≤",
            type: "technical",
            urgency: "immediate",
            estimatedTime: 180,
            completed: false
          },
          {
            id: crypto.randomUUID(),
            title: "–£—Å–∏–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            description: "–í–Ω–µ–¥—Ä–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞",
            type: "process",
            urgency: "urgent",
            estimatedTime: 90,
            completed: false
          }
        );
        break;

      case "team":
        actions.push(
          {
            id: crypto.randomUUID(),
            title: "–ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏",
            description: "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–¥–∞—á–∏ –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏",
            type: "process",
            urgency: "immediate",
            estimatedTime: 60,
            completed: false
          },
          {
            id: crypto.randomUUID(),
            title: "–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã",
            description: "–ù–∞–π—Ç–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ø–æ–º–æ—â–∏",
            type: "resource",
            urgency: "urgent",
            estimatedTime: 240,
            completed: false
          }
        );
        break;
    }

    const response: CrisisResponse = {
      id: crypto.randomUUID(),
      alertId,
      type: "immediate",
      actions,
      priority: alert.severity === "critical" ? "urgent" : "high",
      estimatedTime: actions.reduce((sum, action) => sum + action.estimatedTime, 0) / 60,
      assignedTo: alert.affectedUsers,
      status: "pending",
      createdAt: new Date()
    };

    this.crisisResponses.push(response);
    return response;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤ –∫—Ä–∏–∑–∏—Å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏
   */
  static sendCrisisSupportMessages(alertId: string): CrisisSupportMessage[] {
    const alert = this.activeAlerts.find(a => a.id === alertId);
    if (!alert) return [];

    const messages: CrisisSupportMessage[] = [];

    alert.affectedUsers.forEach(userId => {
      let message: CrisisSupportMessage;

      switch (alert.type) {
        case "burnout":
          message = {
            id: crypto.randomUUID(),
            userId,
            type: "motivation",
            content: "üö® –ö–†–ò–ó–ò–°–ù–ê–Ø –ü–û–î–î–ï–†–ñ–ö–ê: –Ø –≤–∏–∂—É, —á—Ç–æ –≤—ã –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã. –°–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤ –∏ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã. –í—ã –Ω–µ –æ–¥–∏–Ω–æ–∫–∏ - –≤—Å—è –∫–æ–º–∞–Ω–¥–∞ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞! üí™",
            tone: "supportive",
            priority: "critical",
            sentAt: new Date(),
            delivered: false
          };
          break;

        case "deadline":
          message = {
            id: crypto.randomUUID(),
            userId,
            type: "guidance",
            content: "‚è∞ –î–ï–î–õ–ê–ô–ù –ö–†–ò–ó–ò–°: –ü–æ–Ω–∏–º–∞—é –¥–∞–≤–ª–µ–Ω–∏–µ –¥–µ–¥–ª–∞–π–Ω–∞. –î–∞–≤–∞–π—Ç–µ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏–º—Å—è –Ω–∞ —Å–∞–º–æ–º –≤–∞–∂–Ω–æ–º –∏ —É–±–µ—Ä–µ–º –ª–∏—à–Ω–µ–µ. –Ø –ø–æ–º–æ–≥—É –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏ –Ω–∞–π—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã! üéØ",
            tone: "encouraging",
            priority: "high",
            sentAt: new Date(),
            delivered: false
          };
          break;

        case "technical":
          message = {
            id: crypto.randomUUID(),
            userId,
            type: "guidance",
            content: "üêõ –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –ö–†–ò–ó–ò–°: –ú–Ω–æ–≥–æ –±–∞–≥–æ–≤ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –î–∞–≤–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Ö –∏—Å–ø—Ä–∞–≤–∏–º. –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–±–ª–µ–º –∏ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è! üîß",
            tone: "calm",
            priority: "high",
            sentAt: new Date(),
            delivered: false
          };
          break;

        case "team":
          message = {
            id: crypto.randomUUID(),
            userId,
            type: "relief",
            content: "üë• –ö–û–ú–ê–ù–î–ù–´–ô –ö–†–ò–ó–ò–°: –ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞, –Ω–æ –º—ã —Å–ø—Ä–∞–≤–∏–º—Å—è! –î–∞–≤–∞–π—Ç–µ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–º –∑–∞–¥–∞—á–∏ –∏ –ø—Ä–∏–≤–ª–µ—á–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–º–æ—â—å. –í–º–µ—Å—Ç–µ –º—ã —Å–∏–ª—å–Ω–µ–µ! ü§ù",
            tone: "energetic",
            priority: "high",
            sentAt: new Date(),
            delivered: false
          };
          break;

        default:
          message = {
            id: crypto.randomUUID(),
            userId,
            type: "motivation",
            content: "üö® –ö–†–ò–ó–ò–°–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞, —Ç—Ä–µ–±—É—é—â–∞—è –≤–Ω–∏–º–∞–Ω–∏—è. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥—É. –ú—ã —Å–ø—Ä–∞–≤–∏–º—Å—è! üí™",
            tone: "supportive",
            priority: "medium",
            sentAt: new Date(),
            delivered: false
          };
      }

      messages.push(message);
    });

    this.supportMessages.push(...messages);
    return messages;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫—Ä–∏–∑–∏—Å–µ
   */
  private static sendCrisisNotifications(): void {
    const notification: CrisisSupportMessage = {
      id: crypto.randomUUID(),
      userId: "all",
      type: "escalation",
      content: "üö® –ê–ö–¢–ò–í–ò–†–û–í–ê–ù –†–ï–ñ–ò–ú –ö–†–ò–ó–ò–°–ê! –í–∞—Å–∏–ª–∏–π –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–µ–∂–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø–æ–º–æ—â—å –∫–æ–º–∞–Ω–¥–µ. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏! üí™ü§ñ",
      tone: "urgent",
      priority: "critical",
      sentAt: new Date(),
      delivered: false
    };

    this.supportMessages.push(notification);
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –∫—Ä–∏–∑–∏—Å–Ω–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  static executeCrisisAction(responseId: string, actionId: string, assignedTo: string): boolean {
    const response = this.crisisResponses.find(r => r.id === responseId);
    if (!response) return false;

    const action = response.actions.find(a => a.id === actionId);
    if (!action) return false;

    action.assignedTo = assignedTo;
    action.completed = true;
    action.completedAt = new Date();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã
    const allCompleted = response.actions.every(a => a.completed);
    if (allCompleted) {
      response.status = "completed";
      response.completedAt = new Date();

      // –û—Ç–º–µ—á–∞–µ–º –∞–ª–µ—Ä—Ç –∫–∞–∫ —Ä–µ—à–µ–Ω–Ω—ã–π
      const alert = this.activeAlerts.find(a => a.id === response.alertId);
      if (alert) {
        alert.resolved = true;
        alert.resolutionActions = response.actions.map(a => a.title);
      }
    } else {
      response.status = "in_progress";
    }

    return true;
  }

  /**
   * –≠—Å–∫–∞–ª–∏—Ä—É–µ—Ç –∫—Ä–∏–∑–∏—Å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é
   */
  static escalateCrisis(alertId: string): boolean {
    const alert = this.activeAlerts.find(a => a.id === alertId);
    if (!alert) return false;

    alert.escalated = true;
    alert.severity = "critical";

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç—Å–∫–∞–ª–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const escalationMessage: CrisisSupportMessage = {
      id: crypto.randomUUID(),
      userId: "management",
      type: "escalation",
      content: `üö® –≠–°–ö–ê–õ–ê–¶–ò–Ø –ö–†–ò–ó–ò–°–ê: ${alert.title}. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞. –°–∏—Ç—É–∞—Ü–∏—è: ${alert.description}`,
      tone: "urgent",
      priority: "critical",
      sentAt: new Date(),
      delivered: false
    };

    this.supportMessages.push(escalationMessage);
    return true;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∫—Ä–∏–∑–∏—Å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏
   */
  static getActiveCrises(): CrisisAlert[] {
    return this.activeAlerts.filter(alert => !alert.resolved);
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫—Ä–∏–∑–∏—Å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
   */
  static getCrisisResponses(): CrisisResponse[] {
    return [...this.crisisResponses];
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
   */
  static getSupportMessages(): CrisisSupportMessage[] {
    return [...this.supportMessages];
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –∫—Ä–∏–∑–∏—Å–∞
   */
  static getCrisisMetrics(): CrisisMetrics {
    const activeCrises = this.activeAlerts.filter(alert => !alert.resolved).length;
    const resolvedCrises = this.activeAlerts.filter(alert => alert.resolved).length;
    
    const completedResponses = this.crisisResponses.filter(r => r.status === "completed");
    const averageResolutionTime = completedResponses.length > 0 ? 
      completedResponses.reduce((sum, r) => {
        if (r.completedAt) {
          return sum + (r.completedAt.getTime() - r.createdAt.getTime()) / (1000 * 60 * 60);
        }
        return sum;
      }, 0) / completedResponses.length : 0;

    const escalatedCrises = this.activeAlerts.filter(alert => alert.escalated).length;
    const escalationRate = this.activeAlerts.length > 0 ? escalatedCrises / this.activeAlerts.length : 0;

    return {
      activeCrises,
      resolvedCrises,
      averageResolutionTime,
      teamStressLevel: 0.7, // TODO: Calculate from actual data
      productivityImpact: 0.3, // TODO: Calculate from actual data
      supportMessagesSent: this.supportMessages.length,
      escalationRate
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ä–µ–∂–∏–º –∫—Ä–∏–∑–∏—Å–∞
   */
  static isCrisisModeActive(): boolean {
    return this.crisisModeActive;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—é –∫—Ä–∏–∑–∏—Å–æ–≤
   */
  static getCrisisPreventionRecommendations(): string[] {
    const recommendations = [
      "–†–µ–≥—É–ª—è—Ä–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ –∫–æ–º–∞–Ω–¥—ã",
      "–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –±—É—Ñ–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á",
      "–í–Ω–µ–¥—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–∞–≥–æ–≤",
      "–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤—ã –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º",
      "–°–æ–∑–¥–∞–π—Ç–µ –∫—É–ª—å—Ç—É—Ä—É –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö",
      "–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
      "–í–Ω–µ–¥—Ä–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É —Ä–∞–Ω–Ω–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ —Ä–∏—Å–∫–∞—Ö",
      "–û–±–µ—Å–ø–µ—á—å—Ç–µ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ä–∞–±–æ—Ç–æ–π –∏ –æ—Ç–¥—ã—Ö–æ–º"
    ];

    return recommendations;
  }
}
